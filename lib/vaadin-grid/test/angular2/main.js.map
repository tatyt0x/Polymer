{"version":3,"sources":["main.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;YAGA,qBAAc,EAAE,CAAC;YAsBjB;gBASE,iBAAY,CAAa,EAAE,GAAsB;oBAL1C,UAAK,GAAG,EAAE,CAAC;oBAMhB,IAAI,CAAC,KAAK,GAAG,CAAC,CAAC,aAAa,CAAC;oBAC7B,IAAI,CAAC,IAAI,GAAG,GAAG,CAAC;gBAClB,CAAC;gBAEM,+BAAa,GAApB;oBACE,IAAI,CAAC,IAAI,CAAC,aAAa,EAAE,CAAC;gBAC5B,CAAC;gBAED,iCAAe,GAAf;oBAAA,iBAOC;oBANC,IAAI,IAAI,GAAG,IAAI,CAAC,IAAI,CAAC,aAAa,CAAC;oBACnC,IAAI,CAAC,IAAI,CAAC;wBACR,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,IAAI,GAAG,GAAG,CAAC;wBAC3B,IAAI,KAAK,GAAG,IAAI,WAAW,CAAC,eAAe,EAAE,EAAC,MAAM,EAAE,KAAI,EAAC,CAAC,CAAC;wBAC7D,KAAI,CAAC,KAAK,CAAC,aAAa,CAAC,KAAK,CAAC,CAAC;oBAClC,CAAC,CAAC,CAAC;gBACL,CAAC;gBAlBD;oBAAC,gBAAS,CAAC,MAAM,CAAC;;qDAAA;gBA3BpB;oBAAC,gBAAS,CAAC;wBACT,QAAQ,EAAE,UAAU;wBACpB,QAAQ,EAAE,+UAeP;wBACH,UAAU,EAAE,CAAC,iCAAc,CAAC,aAAa,CAAC,CAAC;qBAC5C,CAAC;;2BAAA;gBA2BF,cAAC;YAAD,CA1BA,AA0BC,IAAA;YA1BD,6BA0BC,CAAA;YAED,QAAQ,CAAC,IAAI,CAAC,gBAAgB,CAAC,WAAW,EAAE;gBAC1C,oCAAS,CAAC,OAAO,CAAC,CAAC;YACrB,CAAC,CAAC,CAAC","file":"main.js","sourcesContent":["import {bootstrap}    from '@angular/platform-browser-dynamic';\nimport {Component, ElementRef, ChangeDetectorRef, ViewChild, enableProdMode} from '@angular/core';\nimport {PolymerElement} from '@vaadin/angular2-polymer';\nenableProdMode();\n\n@Component({\n  selector: 'test-app',\n  template: `\n    <vaadin-grid #grid>\n      <table>\n        <colgroup>\n          <col>\n          <col>\n          <col *ngIf=\"thirdColumn\" />\n        </colgroup>\n        <tbody>\n          <tr *ngFor=\"let item of items\">\n            <td>foo</td><td>bar</td>\n          </tr>\n        </tbody>\n      </table>\n    </vaadin-grid>\n    `,\n  directives: [PolymerElement('vaadin-grid')]\n})\nexport class TestApp {\n\n  private _host;\n  private _ref;\n  public items = [];\n  public thirdColumn;\n\n  @ViewChild('grid') grid: any;\n\n  constructor(e: ElementRef, ref: ChangeDetectorRef) {\n    this._host = e.nativeElement;\n    this._ref = ref;\n  }\n\n  public detectChanges() {\n    this._ref.detectChanges();\n  }\n\n  ngAfterViewInit() {\n    var grid = this.grid.nativeElement;\n    grid.then(() => {\n      grid.columns[0].flex = '2';\n      var event = new CustomEvent('readyForTests', {detail: this});\n      this._host.dispatchEvent(event);\n    });\n  }\n}\n\ndocument.body.addEventListener('bootstrap', () => {\n  bootstrap(TestApp);\n});\n"],"sourceRoot":"/source/"}